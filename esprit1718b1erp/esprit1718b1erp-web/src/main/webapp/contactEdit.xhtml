<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html" template="/home.xhtml"
	xmlns:jsf="http://xmlns.jcp.org/jsf">

	<ui:define name="pageCSS">
		<h:outputStylesheet library="css" name="bootstrap.min.css" />
		<h:outputStylesheet library="font-awesome" name="css/font-awesome.css" />
		<h:outputStylesheet library="css" name="plugins/iCheck/custom.css" />
		<h:outputStylesheet library="css"
			name="plugins/steps/jquery.steps.css" />
		<h:outputStylesheet library="css" name="animate.css" />
		<h:outputStylesheet library="css" name="style.css" />

	</ui:define>

	<ui:define name="titleHere">
		<div class="row wrapper border-bottom white-bg page-heading">
			<div class="col-sm-4">
				<h2>Contact Management</h2>
				<ol class="breadcrumb">
					<li><a href="home.jsf">home</a></li>
					<li class="active"><strong>Contact Management</strong></li>
				</ol>
			</div>

		</div>

		<!--	here -->
		<br />
		<div class="row">
			<div class="col-lg-12">
				<div class="ibox">
					<div class="ibox-title">
						<h5>Contact Management</h5>
					</div>
					<div class="ibox-content">
						<h2>Update Contact</h2>
						<p>please complete the wizard to update contact</p>

						<h:form>
							<h1>info</h1>
							<div class="row">
								<div class="form-group">
									<label>name *</label>
									<h:inputText value="#{contactBean.particularDetails.name}"
										styleClass="form-control required" />
								</div>

								<div class="form-group">
									<label>first name *</label>
									<h:inputTextarea
										value="#{contactBean.particularDetails.first_name}"
										styleClass="form-control" />
								</div>
								<div class="form-group">
									<label>Civility *</label>
									<h:selectOneMenu styleClass="form-control"
										value="#{contactBean.particularDetails.civility}">
										<f:selectItem
											itemLabel="#{contactBean.particularDetails.civility}"
											itemValue="" />
										<f:selectItem itemLabel="Single" itemValue="Single" />
										<f:selectItem itemLabel="Married" itemValue="Married" />
										<f:selectItem itemLabel="Other" itemValue="Other" />

									</h:selectOneMenu>
								</div>
								<div class="form-group">
									<label>Mobile *</label>
									<h:inputText value="#{contactBean.particularDetails.mobile}"
										styleClass="form-control required" />

								</div>
								<div class="form-group">
									<label>Phone *</label>
									<h:inputText value="#{contactBean.particularDetails.phone}"
										styleClass="form-control required" />

								</div>
								<div class="form-group">
									<label>Email *</label>
									<h:inputText value="#{contactBean.particularDetails.email}"
										styleClass="form-control required" />

								</div>
								<div class="form-group">
									<label>WebSite *</label>
									<h:inputText value="#{contactBean.particularDetails.website}"
										styleClass="form-control required" />

								</div>
								<div class="form-group">
									<label>Language *</label>
									<h:selectOneMenu styleClass="form-control"
										value="#{contactBean.particularDetails.language}">
										<f:selectItem
											itemLabel="#{contactBean.particularDetails.language}"
											itemValue="" />
										<f:selectItem itemLabel="Arabic" itemValue="Arabic" />
										<f:selectItem itemLabel="French" itemValue="French" />
										<f:selectItem itemLabel="English" itemValue="English" />

									</h:selectOneMenu>
								</div>
								<div class="form-group">
									<label>Role *</label>
									<h:selectOneMenu styleClass="form-control"
										value="#{contactBean.particularDetails.role}">
										<f:selectItem
											itemLabel="#{contactBean.particularDetails.role}"
											itemValue="" />
										<f:selectItem itemLabel="customer" itemValue="customer" />
										<f:selectItem itemLabel="provider" itemValue="provider" />
									</h:selectOneMenu>
								</div>
								<div class="form-group">
									<label>Position Held *</label>
									<h:inputText
										value="#{contactBean.particularDetails.positionHeld}"
										styleClass="form-control required" />

								</div>


								<div class="form-group">
									<label>Picture *</label>
									<h:inputText value="#{contactBean.particularDetails.picture}"
										styleClass="form-control required" />

								</div>
								<div class="form-group">
									<label>Street *</label>
									<h:inputText value="#{contactBean.particularDetails.street}"
										styleClass="form-control required" />

								</div>
								<div class="form-group">
									<label>City *</label>
									<h:inputText value="#{contactBean.particularDetails.city}"
										styleClass="form-control required" />

								</div>
								<div class="form-group">
									<label>Region *</label>
									<h:inputText value="#{contactBean.particularDetails.region}"
										styleClass="form-control required" />

								</div>
								<div class="form-group">
									<label>Country *</label>
									<h:inputText value="#{contactBean.particularDetails.country}"
										styleClass="form-control required" />

								</div>
								<div class="form-group">
									<label>ZipCode *</label>
									<h:inputText value="#{contactBean.particularDetails.zipCode}"
										styleClass="form-control required" />

								</div>


								<div class="form-group">
									<label>Company *</label>
									<h:selectOneMenu styleClass="form-control"
										value="#{contactBean.companyName}">
										<f:selectItem
											itemLabel="#{contactBean.particularDetails.company.name}"
											itemValue="" />
										<f:selectItems value="#{contactBean.companies}" var="company"
											itemValue="#{company.name}" itemLabel="#{company.name}" />
									</h:selectOneMenu>
								</div>




								<h1>Finish</h1>

								<div class="text-center" style="margin-top: 120px">
									<h:commandButton value="Update contact"
										action="#{contactBean.updateParticular()}"
										styleClass="btn btn-primary" />
								</div>


							</div>






						</h:form>
					</div>
				</div>
			</div>

		</div>

		<!-- 	/here -->
	</ui:define>
	<ui:define name="pageJS">
		<h:outputScript library="js" name="jquery-2.1.1.js"></h:outputScript>
		<h:outputScript library="js" name="bootstrap.min.js"></h:outputScript>
		<h:outputScript library="js"
			name="plugins/metisMenu/jquery.metisMenu.js"></h:outputScript>
		<h:outputScript library="js"
			name="plugins/slimscroll/jquery.slimscroll.min.js"></h:outputScript>


		<!-- Custom and plugin javascript -->

		<h:outputScript library="js" name="inspinia.js"></h:outputScript>
		<h:outputScript library="js" name="plugins/pace/pace.min.js"></h:outputScript>


		<!-- Steps -->
		<h:outputScript library="js" name="plugins/staps/jquery.steps.min.js"></h:outputScript>

		<!-- Jquery Validate -->
		<h:outputScript library="js"
			name="plugins/validate/jquery.validate.min.js"></h:outputScript>


		<!-- Chosen -->
		<h:outputScript library="js" name="plugins/chosen/chosen.jquery.js"></h:outputScript>


		<!-- iCheck -->
		<h:outputScript library="js" name="plugins/iCheck/icheck.min.js"></h:outputScript>

		<!-- MENU -->
		<h:outputScript library="js"
			name="plugins/metisMenu/jquery.metisMenu.js"></h:outputScript>



		<h:outputScript>
		// <![CDATA[
		 $(document).ready(function(){
            $("#wizard").steps();
            $("#form").steps({
                bodyTag: "fieldset",
                enableFinishButton: false,
                onStepChanging: function (event, currentIndex, newIndex)
                {
                    // Always allow going backward even if the current step contains invalid fields!
                    if (currentIndex > newIndex)
                    {
                        return true;
                    }

                    // Forbid suppressing "Warning" step if the user is to young
                    if (newIndex === 3 && Number($("#age").val()) < 18)
                    {
                        return false;
                    }

                    var form = $(this);

                    // Clean up if user went backward before
                    if (currentIndex < newIndex)
                    {
                        // To remove error styles
                        $(".body:eq(" + newIndex + ") label.error", form).remove();
                        $(".body:eq(" + newIndex + ") .error", form).removeClass("error");
                    }

                    // Disable validation on fields that are disabled or hidden.
                    form.validate().settings.ignore = ":disabled,:hidden";

                    // Start validation; Prevent going forward if false
                    return form.valid();
                },
                onStepChanged: function (event, currentIndex, priorIndex)
                {
                    // Suppress (skip) "Warning" step if the user is old enough.
                    if (currentIndex === 2 && Number($("#age").val()) >= 18)
                    {
                        $(this).steps("next");
                    }

                    // Suppress (skip) "Warning" step if the user is old enough and wants to the previous step.
                    if (currentIndex === 2 && priorIndex === 3)
                    {
                        $(this).steps("previous");
                    }
                },
                onFinishing: function (event, currentIndex)
                {
                },
                onFinished: function (event, currentIndex)
                {
                }
            }).validate({
                        errorPlacement: function (error, element)
                        {
                            element.before(error);
                        },
                        rules: {
                            confirm: {
                                equalTo: "#password"
                            }
                        }
                    });
       });
        // ]]>
		</h:outputScript>
	</ui:define>
</ui:composition>
